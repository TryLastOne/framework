<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PC.Framework</name>
    </assembly>
    <members>
        <member name="T:PC.Framework.BaseServices">
            <summary>
            
            </summary>
            <param name="Navigation"></param>
            <param name="Dialogs"></param>
            <param name="ObjectBinder"></param>
            <param name="ErrorHandler"></param>
            <param name="Connectivity"></param>
            <param name="LoggerFactory"></param>
            <param name="Validation"></param>
            <param name="StringLocalizationFactory"></param>
        </member>
        <member name="M:PC.Framework.BaseServices.#ctor(Shiny.IPlatform,Prism.Navigation.INavigationService,PC.Framework.IDialogs,Shiny.Stores.IObjectStoreBinder,PC.Framework.GlobalExceptionAction,Shiny.Net.IConnectivity,Microsoft.Extensions.Logging.ILoggerFactory,PC.Framework.IValidationService,Microsoft.Extensions.Localization.IStringLocalizerFactory)">
            <summary>
            
            </summary>
            <param name="Navigation"></param>
            <param name="Dialogs"></param>
            <param name="ObjectBinder"></param>
            <param name="ErrorHandler"></param>
            <param name="Connectivity"></param>
            <param name="LoggerFactory"></param>
            <param name="Validation"></param>
            <param name="StringLocalizationFactory"></param>
        </member>
        <member name="P:PC.Framework.BaseServices.Navigation">
            <summary></summary>
        </member>
        <member name="P:PC.Framework.BaseServices.Dialogs">
            <summary></summary>
        </member>
        <member name="P:PC.Framework.BaseServices.ObjectBinder">
            <summary></summary>
        </member>
        <member name="P:PC.Framework.BaseServices.ErrorHandler">
            <summary></summary>
        </member>
        <member name="P:PC.Framework.BaseServices.Connectivity">
            <summary></summary>
        </member>
        <member name="P:PC.Framework.BaseServices.LoggerFactory">
            <summary></summary>
        </member>
        <member name="P:PC.Framework.BaseServices.Validation">
            <summary></summary>
        </member>
        <member name="P:PC.Framework.BaseServices.StringLocalizationFactory">
            <summary></summary>
        </member>
        <member name="P:PC.Framework.BaseViewModel.DeactivateToken">
            <summary>
            The destroy cancellation token - called when your model is deactivated
            </summary>
        </member>
        <member name="P:PC.Framework.BaseViewModel.DestroyToken">
            <summary>
            The destroy cancellation token - called when your model is destroyed
            </summary>
        </member>
        <member name="P:PC.Framework.BaseViewModel.Logger">
            <summary>
            A lazy loader logger instance for this viewmodel instance
            </summary>
        </member>
        <member name="P:PC.Framework.BaseViewModel.Platform">
            <summary>
            Access to platform services
            </summary>
        </member>
        <member name="P:PC.Framework.BaseViewModel.Dialogs">
            <summary>
            Dialog service from the service provider
            </summary>
        </member>
        <member name="P:PC.Framework.BaseViewModel.Localize">
            <summary>
            The localization source for this instance - will attempt to use the default section (if registered)
            </summary>
        </member>
        <member name="P:PC.Framework.BaseViewModel.Connectivity">
            <summary>
            Shiny Connectivity Service 
            </summary>
        </member>
        <member name="P:PC.Framework.BaseViewModel.StoreBinder">
            <summary>
            Store binder
            </summary>
        </member>
        <member name="M:PC.Framework.BaseViewModel.WhenValid">
            <summary>
            Monitors for viewmodel changes and returns true if valid - handy for ReactiveCommand in place of WhenAny
            </summary>
            <returns></returns>
        </member>
        <member name="M:PC.Framework.BaseViewModel.SafeExecute(System.Action)">
            <summary>
            Will trap any errors - log them and display a message to the user
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:PC.Framework.BaseViewModel.SafeExecuteAsync(System.Func{System.Threading.Tasks.Task},System.Boolean)">
            <summary>
            Will trap any errors - log them and display a message to the user
            </summary>
            <param name="func"></param>
            <param name="markBusy"></param>
            <returns></returns>
        </member>
        <member name="M:PC.Framework.BaseViewModel.Deactivate">
            <summary>
            This can be called manually, generally used when your viewmodel is going to the background in the nav stack
            </summary>
        </member>
        <member name="M:PC.Framework.BaseViewModel.Destroy">
            <summary>
            Called when the viewmodel is being destroyed (not in nav stack any longer)
            </summary>
        </member>
        <member name="M:PC.Framework.BaseViewModel.BindBusyCommand(System.Windows.Input.ICommand)">
            <summary>
            Binds to IsBusy while your command works
            </summary>
            <param name="command"></param>
        </member>
        <member name="M:PC.Framework.BaseViewModel.BindBusyCommand(ReactiveUI.IReactiveCommand)">
            <summary>
            Binds to IsBusy while your command works
            </summary>
            <param name="command"></param>
        </member>
        <member name="M:PC.Framework.BaseViewModel.RememberUserState">
            <summary>
            Records the state of this model type for all get/set properties
            </summary>
        </member>
        <member name="P:PC.Framework.BaseViewModel.Item(System.String)">
            <summary>
            Reads localization key from localization service
            </summary>
            <param name="key"></param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:PC.Framework.MauiExtensions.UsePcFramework(Microsoft.Maui.Hosting.MauiAppBuilder,Prism.Ioc.IContainerExtension,System.Action{Prism.PrismAppBuilder},PC.Framework.GlobalExceptionHandlerConfig)">
            <summary>
            
            </summary>
            <param name="builder"></param>
            <param name="container"></param>
            <param name="prismBuilder"></param>
            <param name="exceptionConfig"></param>
            <returns></returns>
        </member>
        <member name="M:PC.Framework.RxExtensions.ToAsyncWithNotifications``1(System.IObservable{``0},System.Action{``0},System.Threading.CancellationToken)">
            <summary>
            Allows you to await an observable, while still consuming events
            The await will return when the observable completes or errors
            </summary>
            <typeparam name="T"></typeparam>
            <param name="observable"></param>
            <param name="onNext"></param>
            <param name="cancelToken"></param>
            <returns></returns>
        </member>
        <member name="M:PC.Framework.RxExtensions.AddRange(System.Reactive.Disposables.CompositeDisposable,System.Collections.Generic.IEnumerable{System.IDisposable})">
            <summary>
            Adds multiple items to a composite disposable
            </summary>
            <param name="disposer"></param>
            <param name="en"></param>
        </member>
        <member name="M:PC.Framework.ValidationExtensions.IsValidProperty``1(PC.Framework.IValidationService,``0,System.Linq.Expressions.Expression{System.Func{``0,System.String}})">
            <summary>
            Checks an object property and returns true if valid
            </summary>
            <typeparam name="T"></typeparam>
            <param name="service"></param>
            <param name="obj"></param>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:PC.Framework.ValidationExtensions.ValidateProperty``1(PC.Framework.IValidationService,``0,System.Linq.Expressions.Expression{System.Func{``0,System.String}})">
            <summary>
            Checks an object property to see if it is valid
            </summary>
            <typeparam name="T"></typeparam>
            <param name="service"></param>
            <param name="obj"></param>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="T:PC.Framework.GlobalExceptionAction">
            <summary>
            
            </summary>
        </member>
        <member name="M:PC.Framework.GlobalExceptionAction.#ctor(PC.Framework.GlobalExceptionHandlerConfig,Microsoft.Extensions.Logging.ILogger{PC.Framework.GlobalExceptionAction},PC.Framework.IDialogs,Microsoft.Extensions.Localization.IStringLocalizer{PC.Framework.GlobalExceptionAction})">
            <summary>
            
            </summary>
            <param name="config"></param>
            <param name="logger"></param>
            <param name="dialogs"></param>
            <param name="localize"></param>
        </member>
        <member name="M:PC.Framework.GlobalExceptionAction.ShouldIgnore(PC.Framework.GlobalExceptionHandlerConfig,System.Exception)">
            <summary>
            
            </summary>
            <param name="cfg"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PC.Framework.GlobalExceptionAction.Process(System.Exception,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="title"></param>
            <param name="body"></param>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="T:PC.Framework.ErrorAlertType">
            <summary>
            
            </summary>
        </member>
        <member name="F:PC.Framework.ErrorAlertType.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:PC.Framework.ErrorAlertType.NoLocalize">
            <summary>
            
            </summary>
        </member>
        <member name="F:PC.Framework.ErrorAlertType.FullError">
            <summary>
            
            </summary>
        </member>
        <member name="F:PC.Framework.ErrorAlertType.Localize">
            <summary>
            
            </summary>
        </member>
        <member name="T:PC.Framework.GlobalExceptionHandlerConfig">
            <summary>
            
            </summary>
            <param name="AlertType"></param>
            <param name="LocalizeErrorTitleKey"></param>
            <param name="LocalizeErrorBodyKey"></param>
            <param name="IgnoreTokenCancellations"></param>
            <param name="LogError"></param>
        </member>
        <member name="M:PC.Framework.GlobalExceptionHandlerConfig.#ctor(PC.Framework.ErrorAlertType,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="AlertType"></param>
            <param name="LocalizeErrorTitleKey"></param>
            <param name="LocalizeErrorBodyKey"></param>
            <param name="IgnoreTokenCancellations"></param>
            <param name="LogError"></param>
        </member>
        <member name="P:PC.Framework.GlobalExceptionHandlerConfig.AlertType">
            <summary></summary>
        </member>
        <member name="P:PC.Framework.GlobalExceptionHandlerConfig.LocalizeErrorTitleKey">
            <summary></summary>
        </member>
        <member name="P:PC.Framework.GlobalExceptionHandlerConfig.LocalizeErrorBodyKey">
            <summary></summary>
        </member>
        <member name="P:PC.Framework.GlobalExceptionHandlerConfig.IgnoreTokenCancellations">
            <summary></summary>
        </member>
        <member name="P:PC.Framework.GlobalExceptionHandlerConfig.LogError">
            <summary></summary>
        </member>
        <member name="T:PC.Framework.IDialogs">
            <summary>
            
            </summary>
        </member>
        <member name="M:PC.Framework.IDialogs.Alert(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="title"></param>
            <param name="dismissText"></param>
            <returns></returns>
        </member>
        <member name="M:PC.Framework.IDialogs.ActionSheet(System.String,System.String,System.String,System.String[])">
            <summary>
            
            </summary>
            <param name="title"></param>
            <param name="acceptText"></param>
            <param name="dismissText"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:PC.Framework.IDialogs.Confirm(System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="title"></param>
            <param name="acceptText"></param>
            <param name="dismissText"></param>
            <returns></returns>
        </member>
        <member name="M:PC.Framework.IDialogs.Input(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},PC.Framework.InputKeyboard)">
            <summary>
            
            </summary>
            <param name="question"></param>
            <param name="title"></param>
            <param name="acceptText"></param>
            <param name="dismissText"></param>
            <param name="placeholder"></param>
            <param name="maxLength"></param>
            <param name="keyboard"></param>
            <returns></returns>
        </member>
        <member name="M:PC.Framework.IDialogs.Snackbar(System.String,System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="durationMillis"></param>
            <param name="actionText"></param>
            <returns></returns>
        </member>
        <member name="M:PC.Framework.IDialogs.Toast(System.String,System.Int32,System.Double)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="durationMillis"></param>
            <param name="fontSize"></param>
            <returns></returns>
        </member>
        <member name="T:PC.Framework.InputKeyboard">
            <summary>
            
            </summary>
        </member>
        <member name="F:PC.Framework.InputKeyboard.Chat">
            <summary>
            
            </summary>
        </member>
        <member name="F:PC.Framework.InputKeyboard.Default">
            <summary>
            
            </summary>
        </member>
        <member name="F:PC.Framework.InputKeyboard.Email">
            <summary>
            
            </summary>
        </member>
        <member name="F:PC.Framework.InputKeyboard.Numeric">
            <summary>
            
            </summary>
        </member>
        <member name="F:PC.Framework.InputKeyboard.Plain">
            <summary>
            
            </summary>
        </member>
        <member name="F:PC.Framework.InputKeyboard.Telephone">
            <summary>
            
            </summary>
        </member>
        <member name="F:PC.Framework.InputKeyboard.Text">
            <summary>
            
            </summary>
        </member>
        <member name="F:PC.Framework.InputKeyboard.Url">
            <summary>
            
            </summary>
        </member>
        <member name="T:PC.Framework.IGlobalNavigationService">
            <summary>
            
            </summary>
        </member>
        <member name="T:PC.Framework.Impl.DataAnnotationsValidationService">
            <summary>
            
            </summary>
            <param name="localizationManager"></param>
        </member>
        <member name="M:PC.Framework.Impl.DataAnnotationsValidationService.#ctor(Microsoft.Extensions.Localization.IStringLocalizerFactory)">
            <summary>
            
            </summary>
            <param name="localizationManager"></param>
        </member>
        <member name="T:PC.Framework.Impl.GlobalExceptionHandler">
            <summary>
            
            </summary>
        </member>
        <member name="M:PC.Framework.Impl.GlobalExceptionHandler.OnCompleted">
            <summary>
            
            </summary>
        </member>
        <member name="M:PC.Framework.Impl.GlobalExceptionHandler.OnError(System.Exception)">
            <summary>
            
            </summary>
            <param name="error"></param>
        </member>
        <member name="M:PC.Framework.Impl.GlobalExceptionHandler.OnNext(System.Exception)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="F:PC.Framework.Impl.NativeDialogs.SnackbarOptions">
            <summary>
            
            </summary>
        </member>
        <member name="T:PC.Framework.IValidationBinding">
            <summary>
            
            </summary>
        </member>
        <member name="P:PC.Framework.IValidationBinding.IsError">
            <summary>
            
            </summary>
        </member>
        <member name="P:PC.Framework.IValidationBinding.Errors">
            <summary>
            
            </summary>
        </member>
        <member name="P:PC.Framework.IValidationBinding.Touched">
            <summary>
            
            </summary>
        </member>
        <member name="T:PC.Framework.IValidationService">
            <summary>
            
            </summary>
        </member>
        <member name="M:PC.Framework.IValidationService.Bind(PC.Framework.IValidationViewModel)">
            <summary>
            Monitors the viewmodel for changes and sets it's Touched and Errors dictionary as the user changes
            </summary>
            <param name="viewModel">Your viewmodel that subscribes to IValidationViewModel</param>
            <returns></returns>
        </member>
        <member name="M:PC.Framework.IValidationService.Validate(System.Object)">
            <summary>
            Returns a dictionary of invalid properties with their corresponding error messages
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:PC.Framework.IValidationService.ValidateProperty(System.Object,System.String)">
             <summary>
            
             </summary>
             <param name="obj"></param>
             <param name="propertyName"></param>
             <returns></returns>
        </member>
        <member name="M:PC.Framework.IValidationService.IsValid(System.Object,System.String)">
            <summary>
            Pass an object to run it through all validations
            </summary>
            <param name="obj"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="T:PC.Framework.IValidationViewModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:PC.Framework.IValidationViewModel.Validation">
            <summary>
            
            </summary>
        </member>
        <member name="T:PC.Framework.LoggingExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:PC.Framework.LoggingExtensions.LogWarningIfSlow(Microsoft.Extensions.Logging.ILogger,System.Func{System.TimeSpan,System.String},System.Nullable{System.TimeSpan})">
            <summary>
            Logs a warning if enabled and method scope time >= passed slowTime
            </summary>
            <param name="logger">This logger to use</param>
            <param name="getMsg">Build the message with the time taken</param>
            <param name="slowTime">Defaults to 5 seconds</param>
            <returns></returns>
        </member>
        <member name="M:PC.Framework.LoggingExtensions.LogWarningIfSlow(Microsoft.Extensions.Logging.ILogger,System.Func{System.Threading.Tasks.Task},System.Func{System.TimeSpan,System.String},System.Nullable{System.TimeSpan})">
            <summary>
            Execute a task wrapped in the warning timer logic
            </summary>
            <param name="logger"></param>
            <param name="taskFunc"></param>
            <param name="getMsg"></param>
            <param name="slowTime"></param>
            <returns></returns>
        </member>
        <member name="T:PC.Framework.ViewModel">
            <summary>
            
            </summary>
        </member>
        <member name="M:PC.Framework.ViewModel.#ctor(PC.Framework.BaseServices)">
            <summary>
            
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:PC.Framework.ViewModel.InitializeAsync(Prism.Navigation.INavigationParameters)">
            <summary>
            
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:PC.Framework.ViewModel.CanNavigateAsync(Prism.Navigation.INavigationParameters)">
            <summary>
            
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:PC.Framework.ViewModel.OnNavigatedFrom(Prism.Navigation.INavigationParameters)">
            <summary>
            
            </summary>
            <param name="parameters"></param>
        </member>
        <member name="M:PC.Framework.ViewModel.OnNavigatedTo(Prism.Navigation.INavigationParameters)">
            <summary>
            
            </summary>
            <param name="parameters"></param>
        </member>
        <member name="M:PC.Framework.ViewModel.OnAppearing">
            <summary>
            
            </summary>
        </member>
        <member name="M:PC.Framework.ViewModel.OnDisappearing">
            <summary>
            
            </summary>
        </member>
        <member name="M:PC.Framework.ViewModel.OnResume">
            <summary>
            
            </summary>
        </member>
        <member name="M:PC.Framework.ViewModel.OnSleep">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Controls.ColorAnimationExtensions_Button.TextColorTo(Microsoft.Maui.Controls.Button,Microsoft.Maui.Graphics.Color,System.UInt32,System.UInt32,Microsoft.Maui.Easing,System.Threading.CancellationToken)">
            <summary>
            Animates the TextColor of an <see cref = "T:Microsoft.Maui.ITextStyle"/> to the given color
            </summary>
            <param name = "element"></param>
            <param name = "color">The target color to animate the <see cref = "P:Microsoft.Maui.ITextStyle.TextColor"/> to</param>
            <param name = "rate">The time, in milliseconds, between the frames of the animation</param>
            <param name = "length">The duration, in milliseconds, of the animation</param>
            <param name = "easing">The easing function to be used in the animation</param>
            <param name = "token"><see cref = "T:System.Threading.CancellationToken"/></param>
            <returns>Value indicating if the animation completed successfully or not</returns>
        </member>
        <member name="M:Microsoft.Maui.Controls.ColorAnimationExtensions_DatePicker.TextColorTo(Microsoft.Maui.Controls.DatePicker,Microsoft.Maui.Graphics.Color,System.UInt32,System.UInt32,Microsoft.Maui.Easing,System.Threading.CancellationToken)">
            <summary>
            Animates the TextColor of an <see cref = "T:Microsoft.Maui.ITextStyle"/> to the given color
            </summary>
            <param name = "element"></param>
            <param name = "color">The target color to animate the <see cref = "P:Microsoft.Maui.ITextStyle.TextColor"/> to</param>
            <param name = "rate">The time, in milliseconds, between the frames of the animation</param>
            <param name = "length">The duration, in milliseconds, of the animation</param>
            <param name = "easing">The easing function to be used in the animation</param>
            <param name = "token"><see cref = "T:System.Threading.CancellationToken"/></param>
            <returns>Value indicating if the animation completed successfully or not</returns>
        </member>
        <member name="M:Microsoft.Maui.Controls.ColorAnimationExtensions_Editor.TextColorTo(Microsoft.Maui.Controls.Editor,Microsoft.Maui.Graphics.Color,System.UInt32,System.UInt32,Microsoft.Maui.Easing,System.Threading.CancellationToken)">
            <summary>
            Animates the TextColor of an <see cref = "T:Microsoft.Maui.ITextStyle"/> to the given color
            </summary>
            <param name = "element"></param>
            <param name = "color">The target color to animate the <see cref = "P:Microsoft.Maui.ITextStyle.TextColor"/> to</param>
            <param name = "rate">The time, in milliseconds, between the frames of the animation</param>
            <param name = "length">The duration, in milliseconds, of the animation</param>
            <param name = "easing">The easing function to be used in the animation</param>
            <param name = "token"><see cref = "T:System.Threading.CancellationToken"/></param>
            <returns>Value indicating if the animation completed successfully or not</returns>
        </member>
        <member name="M:Microsoft.Maui.Controls.ColorAnimationExtensions_Entry.TextColorTo(Microsoft.Maui.Controls.Entry,Microsoft.Maui.Graphics.Color,System.UInt32,System.UInt32,Microsoft.Maui.Easing,System.Threading.CancellationToken)">
            <summary>
            Animates the TextColor of an <see cref = "T:Microsoft.Maui.ITextStyle"/> to the given color
            </summary>
            <param name = "element"></param>
            <param name = "color">The target color to animate the <see cref = "P:Microsoft.Maui.ITextStyle.TextColor"/> to</param>
            <param name = "rate">The time, in milliseconds, between the frames of the animation</param>
            <param name = "length">The duration, in milliseconds, of the animation</param>
            <param name = "easing">The easing function to be used in the animation</param>
            <param name = "token"><see cref = "T:System.Threading.CancellationToken"/></param>
            <returns>Value indicating if the animation completed successfully or not</returns>
        </member>
        <member name="M:Microsoft.Maui.Controls.ColorAnimationExtensions_InputView.TextColorTo(Microsoft.Maui.Controls.InputView,Microsoft.Maui.Graphics.Color,System.UInt32,System.UInt32,Microsoft.Maui.Easing,System.Threading.CancellationToken)">
            <summary>
            Animates the TextColor of an <see cref = "T:Microsoft.Maui.ITextStyle"/> to the given color
            </summary>
            <param name = "element"></param>
            <param name = "color">The target color to animate the <see cref = "P:Microsoft.Maui.ITextStyle.TextColor"/> to</param>
            <param name = "rate">The time, in milliseconds, between the frames of the animation</param>
            <param name = "length">The duration, in milliseconds, of the animation</param>
            <param name = "easing">The easing function to be used in the animation</param>
            <param name = "token"><see cref = "T:System.Threading.CancellationToken"/></param>
            <returns>Value indicating if the animation completed successfully or not</returns>
        </member>
        <member name="M:Microsoft.Maui.Controls.ColorAnimationExtensions_Label.TextColorTo(Microsoft.Maui.Controls.Label,Microsoft.Maui.Graphics.Color,System.UInt32,System.UInt32,Microsoft.Maui.Easing,System.Threading.CancellationToken)">
            <summary>
            Animates the TextColor of an <see cref = "T:Microsoft.Maui.ITextStyle"/> to the given color
            </summary>
            <param name = "element"></param>
            <param name = "color">The target color to animate the <see cref = "P:Microsoft.Maui.ITextStyle.TextColor"/> to</param>
            <param name = "rate">The time, in milliseconds, between the frames of the animation</param>
            <param name = "length">The duration, in milliseconds, of the animation</param>
            <param name = "easing">The easing function to be used in the animation</param>
            <param name = "token"><see cref = "T:System.Threading.CancellationToken"/></param>
            <returns>Value indicating if the animation completed successfully or not</returns>
        </member>
        <member name="M:Microsoft.Maui.Controls.ColorAnimationExtensions_Picker.TextColorTo(Microsoft.Maui.Controls.Picker,Microsoft.Maui.Graphics.Color,System.UInt32,System.UInt32,Microsoft.Maui.Easing,System.Threading.CancellationToken)">
            <summary>
            Animates the TextColor of an <see cref = "T:Microsoft.Maui.ITextStyle"/> to the given color
            </summary>
            <param name = "element"></param>
            <param name = "color">The target color to animate the <see cref = "P:Microsoft.Maui.ITextStyle.TextColor"/> to</param>
            <param name = "rate">The time, in milliseconds, between the frames of the animation</param>
            <param name = "length">The duration, in milliseconds, of the animation</param>
            <param name = "easing">The easing function to be used in the animation</param>
            <param name = "token"><see cref = "T:System.Threading.CancellationToken"/></param>
            <returns>Value indicating if the animation completed successfully or not</returns>
        </member>
        <member name="M:Microsoft.Maui.Controls.ColorAnimationExtensions_RadioButton.TextColorTo(Microsoft.Maui.Controls.RadioButton,Microsoft.Maui.Graphics.Color,System.UInt32,System.UInt32,Microsoft.Maui.Easing,System.Threading.CancellationToken)">
            <summary>
            Animates the TextColor of an <see cref = "T:Microsoft.Maui.ITextStyle"/> to the given color
            </summary>
            <param name = "element"></param>
            <param name = "color">The target color to animate the <see cref = "P:Microsoft.Maui.ITextStyle.TextColor"/> to</param>
            <param name = "rate">The time, in milliseconds, between the frames of the animation</param>
            <param name = "length">The duration, in milliseconds, of the animation</param>
            <param name = "easing">The easing function to be used in the animation</param>
            <param name = "token"><see cref = "T:System.Threading.CancellationToken"/></param>
            <returns>Value indicating if the animation completed successfully or not</returns>
        </member>
        <member name="M:Microsoft.Maui.Controls.ColorAnimationExtensions_SearchBar.TextColorTo(Microsoft.Maui.Controls.SearchBar,Microsoft.Maui.Graphics.Color,System.UInt32,System.UInt32,Microsoft.Maui.Easing,System.Threading.CancellationToken)">
            <summary>
            Animates the TextColor of an <see cref = "T:Microsoft.Maui.ITextStyle"/> to the given color
            </summary>
            <param name = "element"></param>
            <param name = "color">The target color to animate the <see cref = "P:Microsoft.Maui.ITextStyle.TextColor"/> to</param>
            <param name = "rate">The time, in milliseconds, between the frames of the animation</param>
            <param name = "length">The duration, in milliseconds, of the animation</param>
            <param name = "easing">The easing function to be used in the animation</param>
            <param name = "token"><see cref = "T:System.Threading.CancellationToken"/></param>
            <returns>Value indicating if the animation completed successfully or not</returns>
        </member>
        <member name="M:Microsoft.Maui.Controls.ColorAnimationExtensions_TimePicker.TextColorTo(Microsoft.Maui.Controls.TimePicker,Microsoft.Maui.Graphics.Color,System.UInt32,System.UInt32,Microsoft.Maui.Easing,System.Threading.CancellationToken)">
            <summary>
            Animates the TextColor of an <see cref = "T:Microsoft.Maui.ITextStyle"/> to the given color
            </summary>
            <param name = "element"></param>
            <param name = "color">The target color to animate the <see cref = "P:Microsoft.Maui.ITextStyle.TextColor"/> to</param>
            <param name = "rate">The time, in milliseconds, between the frames of the animation</param>
            <param name = "length">The duration, in milliseconds, of the animation</param>
            <param name = "easing">The easing function to be used in the animation</param>
            <param name = "token"><see cref = "T:System.Threading.CancellationToken"/></param>
            <returns>Value indicating if the animation completed successfully or not</returns>
        </member>
    </members>
</doc>
